version: '3'
services:
  postgres:
    image: "postgres:9.6"
    environment:
      POSTGRES_USER: awx
      POSTGRES_PASSWORD: awxpass
      POSTGRES_DB: awx

  rabbitmq:
    image: "rabbitmq:3"
    environment:
      RABBITMQ_DEFAULT_VHOST: awx

  memcached:
    image: "memcached:alpine"

  awx_web:
    # image: "geerlingguy/awx_web:latest"
    image: "ansible/awx_web:latest"
    links:
      - rabbitmq
      - memcached
      - postgres
    ports:
      - "80:8052"
    hostname: awxweb
    user: root
    environment:
      SECRET_KEY: aabbcc
      DATABASE_USER: awx
      DATABASE_PASSWORD: awxpass
      DATABASE_NAME: awx
      DATABASE_PORT: 5432
      DATABASE_HOST: postgres
      RABBITMQ_USER: guest
      RABBITMQ_PASSWORD: guest
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_VHOST: awx
      MEMCACHED_HOST: memcached
      MEMCACHED_PORT: 11211

  awx_task:
    # image: "geerlingguy/awx_task:latest"
    image: "ansible/awx_task:latest"
    links:
      - rabbitmq
      - memcached
      - awx_web:awxweb
      - postgres
    hostname: awx
    user: root
    environment:
      SECRET_KEY: aabbcc
      DATABASE_USER: awx
      DATABASE_PASSWORD: awxpass
      DATABASE_NAME: awx
      DATABASE_PORT: 5432
      DATABASE_HOST: postgres
      RABBITMQ_USER: guest
      RABBITMQ_PASSWORD: guest
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_VHOST: awx
      MEMCACHED_HOST: memcached
      MEMCACHED_PORT: 11211

  watchtower:
    image: v2tec/watchtower:latest
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

  dockergc:
    image: clockworksoul/docker-gc-cron:latest
    container_name: docker-gc
    restart: always
    volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - ./docker-gc-exclude:/etc/docker-gc-exclude
    environment:
        # By default, docker-gc is run every night at midnight. Change this variable to override.
        - CRON=0 9,21 * * *

        # By default, docker will not remove an image if it is tagged in multiple repositories. If
        # you have a server running docker where this is the case, for example in CI environments 
        # where dockers are being built, re-tagged, and pushed, you can set this flag to 1 to override.
        - FORCE_IMAGE_REMOVAL=1

        # By default, if an error is encountered when cleaning up a container, Docker will report the
        # error back and leave it on disk. This can sometimes lead to containers accumulating. If
        # you run into this issue, you can force the removal of the container by setting this flag.
        - FORCE_CONTAINER_REMOVAL=1

        # By default, docker-gc will not remove a container if it exited less than 1 hour ago.
        # Set the GRACE_PERIOD_SECONDS variable to override this default.
        - GRACE_PERIOD_SECONDS=3600

        # By default, docker-gc will proceed with deletion of containers and images. To test your
        # settings set the DRY_RUN variable to override this default
        - DRY_RUN=0

        # By default, this process will leave any dangling volumes untouched. To instruct the
        # process to automatically clean up any dangling volumes, simply set this value to 1.
        - CLEAN_UP_VOLUMES=1
        
        # If you don't like all your log output and cron times being in UTC, you can set the
        # TZ variable to override the default.
        - TZ=America/New_York
